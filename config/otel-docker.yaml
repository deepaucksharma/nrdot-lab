receivers:
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
      load:
      memory:
      network:
      paging:
      process:
        mute_process_name_error: true
        metrics:
          process.cpu.utilization:
            enabled: true

  # Optional Docker metrics receiver - enabled via environment variable
  docker:
    ${ENABLE_DOCKER_STATS:+collection_interval: 10s}
    endpoint: unix:///var/run/docker.sock
    timeout: 20s
    api_version: 1.24

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024

  # Process and standardize dimensions
  resource:
    attributes:
      - key: service.name
        value: "process-lab-otel"
        action: upsert
      - key: service.instance.id
        value: "otel-collector"
        action: upsert

  # Metric processing to reduce cardinality
  metricstransform:
    transforms:
      # Add transforms for specific metrics
      - include: system.cpu.utilization
        action: update
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: [ cpu ]

      - include: system.memory.utilization
        action: update
        operations:
          - action: aggregate_labels
            aggregation_type: sum
            label_set: [ state ]

exporters:
  otlp:
    endpoint: https://otlp.nr-data.net:4317
    headers:
      api-key: ${NEW_RELIC_LICENSE_KEY}

  # Debug logging for development 
  logging:
    verbosity: normal

service:
  pipelines:
    metrics:
      receivers: [hostmetrics, docker]
      processors: [resource, metricstransform, batch]
      exporters: [otlp, logging]

  telemetry:
    logs:
      level: info
    metrics:
      level: normal

