[tox]
isolated_build = True
envlist = py38, py39, py310, py311, py312, lint, type, unit, property, snapshot, contracts, perf, fuzz, mutation
skip_missing_interpreters = True

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312, lint, type, unit, property, snapshot, contracts, perf, fuzz, mutation

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements-dev.txt
commands =
    pytest {posargs:tests}

[testenv:lint]
deps = ruff
commands = ruff check {toxinidir}/src {toxinidir}/tests

[testenv:type]
deps = mypy
commands = mypy src/

[testenv:unit]
deps = -rrequirements-test.txt
commands = pytest -q tests/unit

[testenv:property]
deps = -rrequirements-test.txt
commands = pytest -q tests/property

[testenv:snapshot]
deps = -rrequirements-test.txt
commands = pytest -q tests/unit::test_render_matches_snapshot

[testenv:contracts]
deps = -rrequirements-test.txt
commands = pytest -q tests/contracts

[testenv:docker]
deps = -rrequirements-test.txt
commands = pytest -q -m compose

[testenv:integration]
deps = -rrequirements-test.txt
commands = pytest -q tests/integration

[testenv:mutation]
deps = cosmic-ray
commands = cosmic-ray run cr-config.toml --baseline

[testenv:perf]
deps = pytest-benchmark
commands = pytest tests/perf --benchmark-only --benchmark-max-time=3

[testenv:fuzz]
deps = 
    -rrequirements-test.txt
    atheris
commands = pytest -q tests/fuzz

[testenv:all]
deps = -rrequirements-test.txt
commands =
    ruff check {toxinidir}/src {toxinidir}/tests
    mypy src/
    pytest tests/unit tests/property tests/contracts tests/integration
