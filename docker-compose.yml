version: "3.9"

services:
  infra:
    image: newrelic/infrastructure:1.28.0
    container_name: nr-infra
    environment:
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NRIA_VERBOSE: 1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ./config/newrelic-infra.yml:/etc/newrelic-infra.yml:ro
    healthcheck:
      test: ["CMD", "ls", "/"]
      interval: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
    profiles: ["default", "minimal-mounts", "docker-stats"]

  otel:
    image: otel/opentelemetry-collector-contrib:0.57.2
    container_name: otel-collector
    command: ["--config=/etc/otel-config.yaml"]
    environment:
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      HOST_PROC: /host/proc
      HOST_SYS: /host/sys
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ./config/otel-config.yaml:/etc/otel-config.yaml:ro
    healthcheck:
      test: ["CMD", "ls", "/"]
      interval: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
    profiles: ["default", "minimal-mounts"]

  otel-docker:
    image: otel/opentelemetry-collector-contrib:0.57.2
    container_name: otel-collector-docker
    command: ["--config=/etc/otel-config.yaml"]
    environment:
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      HOST_PROC: /host/proc
      HOST_SYS: /host/sys
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ./config/otel-config.yaml:/etc/otel-config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "ls", "/"]
      interval: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
    profiles: ["docker-stats"]

  load:
    build: ./load-image
    container_name: stress-load
    entrypoint: ["/entrypoint.sh"]
    environment:
      STRESS_CPU: ${STRESS_CPU:-2}
      STRESS_MEM: ${STRESS_MEM:-128M}
    deploy:
      resources:
        limits: {cpus: "1.5", memory: 512M}
    healthcheck:
      test: ["CMD", "ls", "/"]
      interval: 10s
      retries: 3
    restart: unless-stopped
    profiles: ["default", "minimal-mounts", "docker-stats"]